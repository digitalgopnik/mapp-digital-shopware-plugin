!function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/bundles/mappconnect/",n(n.s="ID+t")}({"+9FC":function(e,t){e.exports='<sw-checkbox-field\n  disabled="disabled"\n  :value="value"\n  :isLoading="isLoading"\n  v-bind="$attrs"\n  v-on="$listeners"\n  :label="label">\n</sw-checkbox-field>\n'},"+WLY":function(e,t){e.exports='<sw-page class="sw-event-action-detail">\n    <template #smart-bar-header>\n          <h2>{{ identifier }}</h2>\n    </template>\n\n    <template #smart-bar-actions>\n        <sw-button :routerLink="{ name: \'mapp.event.config.index\' }">\n              {{ $tc(\'global.default.cancel\') }}\n        </sw-button>\n\n        <sw-button-process\n              :isLoading="isLoading"\n              :processSuccess="isSaveSuccessful"\n              variant="primary"\n              @process-finish="saveFinish"\n              :disabled="isLoading"\n              @click.prevent="onSave">\n              {{ $tc(\'sw-product.detail.buttonSave\') }}\n        </sw-button-process>\n    </template>\n\n    <template #content>\n        <sw-card-view>\n            <sw-card :isLoading="isLoading">\n                <sw-container columns="75% 1fr" gap="30px">\n                    <sw-field\n                        v-if="mappEvent"\n                        type="text"\n                        label="Title"\n                        placeholder=""\n                        v-model="mappEvent.title">\n                    </sw-field>\n                    <sw-switch-field\n                        v-if="mappEvent"\n                        label="Active"\n                        v-model="mappEvent.active"\n                        bordered>\n                    </sw-switch-field>\n                </sw-container>\n\n\n                <sw-single-select\n                      v-if="mappEvent && businessEvents"\n                      label="Business Event"\n                      :options="businessEvents"\n                      v-model="mappEvent.eventName"\n                      required\n                      labelProperty="label"\n                      valueProperty="name">\n\n                      <template #selection-label-property="{ item }">\n                          <strong>{{ item.label }}</strong> - {{ item.name }}\n                      </template>\n\n                      <template #result-label-property="{ item, highlightSearchTerm, labelProperty, searchTerm }">\n                          <strong>\n                              <sw-highlight-text\n                                  :text="item.label"\n                                  :searchTerm="searchTerm">\n                              </sw-highlight-text>\n                          </strong>\n                          {{ item.name }}\n                      </template>\n                </sw-single-select>\n\n                <sw-entity-multi-select\n                    v-if="mappEvent"\n                    label="Sales Channel"\n                    v-model="mappEvent.salesChannels">\n                </sw-entity-multi-select>\n\n                <mapp-select\n                    v-if="mappEvent"\n                    label="Message"\n                    entity="message"\n                    v-bind:value="mappEvent.messageId"\n                    v-on:change="mappEvent.messageId = $event"\n                    >\n                </mapp-select>\n\n            </sw-card>\n        </sw-card-view>\n    </template>\n</sw-page>\n'},"ID+t":function(e,t,n){"use strict";n.r(t);var i=n("+9FC"),r=n.n(i);Shopware.Component.register("mapp-connection-status",{template:r.a,inject:["mappconnect"],model:{prop:"value",event:"change"},data:function(){return{isLoading:!1,label:"Checking..."}},props:{value:{required:!0}},created:function(){var e=this;this.isLoading=!0,this.mappconnect.getConnectionStatus().then((function(t){e.isLoading=!1,"OK"==t.status&&(e.label="OK. Connected",e.value||e.$emit("change",!0)),"ERROR"==t.status&&(e.label="ERROR: "+e.error),"NO"==t.status&&(e.label="Not connected")}))}});var a=n("NaSJ"),o=n.n(a);function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function p(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,i=f(e);if(t){var r=f(this).constructor;n=Reflect.construct(i,arguments,r)}else n=i.apply(this,arguments);return m(this,n)}}function m(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}Shopware.Component.register("mapp-select",{template:o.a,inject:["mappconnect"],data:function(){return{results:[],isLoading:!0}},props:{value:{required:!0},entity:{required:!0}},created:function(){var e=this;if(this.isLoading=!0,"group"==this.entity&&this.mappconnect.getGroups().then((function(t){e.isLoading=!0,e.results=t})),"message"==this.entity)return this.mappconnect.getMessages().then((function(t){e.isLoading=!0,e.results=t}))},computed:{options:function(){return this.results}}});var d=Shopware.Classes.ApiService,v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&c(e,t)}(a,e);var t,n,i,r=u(a);function a(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"mappconnect";return l(this,a),r.call(this,e,t,n)}return t=a,(n=[{key:"getConnectionStatus",value:function(){var e=this.getBasicHeaders();return this.httpClient.get("".concat(this.getApiBasePath(),"/connection-status"),{headers:e}).then((function(e){return d.handleResponse(e)}))}},{key:"getGroups",value:function(){var e=this.getBasicHeaders();return this.httpClient.get("".concat(this.getApiBasePath(),"/groups"),{headers:e}).then((function(e){return d.handleResponse(e)}))}},{key:"getMessages",value:function(){var e=this.getBasicHeaders();return this.httpClient.get("".concat(this.getApiBasePath(),"/messages"),{headers:e}).then((function(e){return d.handleResponse(e)}))}}])&&p(t.prototype,n),i&&p(t,i),Object.defineProperty(t,"prototype",{writable:!1}),a}(d),h=n("UyLr"),g=n.n(h),b=Shopware.Utils.string.snakeCase,y=Shopware,w=y.Component,E=y.Mixin,S=y.Data.Criteria;w.register("mapp-event-config-list",{template:g.a,inject:["repositoryFactory"],mixins:[E.getByName("listing")],metaInfo:function(){return{title:this.$createTitle()}},data:function(){return{items:null,sortBy:"eventName",sortDirection:"ASC",isLoading:!1,total:0}},computed:{mappEventRepository:function(){return this.repositoryFactory.create("mapp_event")},mappEventCriteria:function(){var e=new S;if(e.setTerm(null),this.term){var t=this.term.split(" ");["eventName","messageId"].forEach((function(n){t.forEach((function(t){t.length>1&&e.addQuery(S.contains(n,t),500)}))}))}return e.addAssociation("salesChannels"),e.addSorting(S.sort(this.sortBy,this.sortDirection)),e},mappEventColumns:function(){return[{property:"eventName",dataIndex:"eventName",label:"Event Name",routerLink:"mapp.event.config.detail",multiLine:!0,allowResize:!0,primary:!0},{property:"title",dataIndex:"title",label:"Title",routerLink:"mapp.event.config.detail",multiLine:!0,allowResize:!0},{property:"messageId",dataIndex:"messageId",label:"Mapp MessageId",routerLink:"mapp.event.config.detail",multiLine:!0,allowResize:!0},{property:"salesChannels",dataIndex:"salesChannels",label:"Sales Channel",sortable:!1,allowResize:!0,multiLine:!0},{property:"active",dataIndex:"active",label:"Active",align:"center",allowResize:!0}]}},methods:{getList:function(){var e=this;return this.isLoading=!0,this.mappEventRepository.search(this.mappEventCriteria,Shopware.Context.api).then((function(t){e.items=t,e.total=t.total,e.isLoading=!1}))},snakeCaseEventName:function(e){return b(e)}}});var C=n("+WLY"),O=n.n(C);function x(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var i,r,a=[],o=!0,s=!1;try{for(n=n.call(e);!(o=(i=n.next()).done)&&(a.push(i.value),!t||a.length!==t);o=!0);}catch(e){s=!0,r=e}finally{try{o||null==n.return||n.return()}finally{if(s)throw r}}return a}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return L(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return L(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function L(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function P(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function j(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?P(Object(n),!0).forEach((function(t){I(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):P(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function I(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var R=Shopware.Utils.string.snakeCase,N=Shopware,k=N.Component,B=(N.Utils,N.Mixin),A=N.Data.Criteria,M=(N.Classes.ShopwareError,Shopware.Component.getComponentHelper().mapPropertyErrors);k.register("mapp-event-config-detail",{template:O.a,inject:["repositoryFactory","businessEventService"],mixins:[B.getByName("notification")],props:{mappEventId:{type:String,required:!1,default:null}},metaInfo:function(){return{title:this.$createTitle(this.identifier)}},watch:{mappEventId:function(){this.loadData()}},data:function(){return{businessEvents:null,mappEvent:null,isLoading:!1,recipients:[],isSaveSuccessful:!1}},computed:j(j({},M("mappEvent",["eventName"])),{},{mappEventRepository:function(){return this.repositoryFactory.create("mapp_event")},mappEventCriteria:function(){var e=new A;return e.addAssociation("salesChannels"),e},identifier:function(){return this.mappEvent&&this.mappEvent.eventName?this.$tc("global.businessEvents.".concat(R(this.mappEvent.eventName))):"New MappConnect Business Event"}}),created:function(){this.createdComponent()},methods:{createdComponent:function(){this.loadData()},loadData:function(){var e=this;return this.isLoading=!0,Promise.all([this.getBusinessEvents(),this.getMappEvent()]).then((function(t){var n=x(t,2),i=n[0],r=n[1];return e.businessEvents=e.addTranslatedEventNames(i),e.mappEvent=r,e.isLoading=!1,Promise.resolve([i,r])})).catch((function(t){return e.createNotificationError({message:t}),e.isLoading=!1,Promise.reject(t)}))},getMappEvent:function(){if(!this.mappEventId){var e=this.mappEventRepository.create(Shopware.Context.api);return e.eventName="",e.active=!1,e}return this.mappEventRepository.get(this.mappEventId,Shopware.Context.api,this.mappEventCriteria)},getBusinessEvents:function(){return this.businessEventService.getBusinessEvents()},addTranslatedEventNames:function(e){var t=this;return e.map((function(e){var n=R(e.name);return j(j({},e),{},{label:t.$tc("global.businessEvents.".concat(n))})}))},onSave:function(){var e=this;return this.isLoading=!0,this.mappEventRepository.save(this.mappEvent,Shopware.Context.api).then((function(){return e.mappEvent.isNew()?(e.$router.push({name:"mapp.event.config.detail",params:{id:e.mappEvent.id}}),Promise.resolve(e.mappEvent)):(e.loadData(),e.isSaveSuccessful=!0,Promise.resolve(e.mappEvent))})).catch((function(t){return e.createNotificationError({message:e.$tc("global.notification.notificationSaveErrorMessageRequiredFieldsInvalid")}),e.isLoading=!1,Promise.reject(t)}))},saveFinish:function(){this.isSaveSuccessful=!1},snakeCaseEventName:function(e){return R(e)}}}),Shopware.Module.register("mapp-event-config",{type:"plugin",name:"mapp-event-config",title:"Mapp Connect Events",description:"",version:"1.0.0",targetVersion:"1.0.0",color:"#9AA8B5",icon:"default-action-settings",favicon:"icon-module-settings.png",entity:"mapp_event",routes:{index:{component:"mapp-event-config-list",path:"index"},detail:{component:"mapp-event-config-detail",path:"detail/:id",props:{default:function(e){return{mappEventId:e.params.id}}},meta:{parentPath:"mapp.event.config.index"}},create:{component:"mapp-event-config-detail",path:"create",meta:{parentPath:"mapp.event.config.index"}}},settingsItem:[{to:"mapp.event.config.index",group:"plugins",icon:"default-action-settings"}]}),Shopware.Service().register("mappconnect",(function(e){var t=Shopware.Application.getContainer("init");return new v(t.httpClient,e.loginService)}))},NaSJ:function(e,t){e.exports='<sw-single-select\n  labelProperty="name"\n  valueProperty="id"\n  :options="options"\n  :value="value"\n  v-bind="$attrs"\n  v-on="$listeners">\n</sw-single-select>\n'},UyLr:function(e,t){e.exports='<sw-page>\n    <template #search-bar>\n        <sw-search-bar\n            initialSearchType="event_action"\n            placeholder="Search"\n            :initialSearch="term"\n            @search="onSearch">\n        </sw-search-bar>\n    </template>\n\n    <template #smart-bar-header>\n        <h2>\n            MappConnect Business Events\n            <span v-if="total > 0"> ({{ total }})</span>\n        </h2>\n    </template>\n\n    <template slot="smart-bar-actions">\n        <sw-button\n            :routerLink="{ name: \'mapp.event.config.create\' }"\n            variant="primary">\n            Add Event\n        </sw-button>\n    </template>\n\n    <template #content>\n        <sw-entity-listing\n            :repository="mappEventRepository"\n            :columns="mappEventColumns"\n            :items="items"\n            :sortBy="sortBy"\n            :sortDirection="sortDirection"\n            :isLoading="isLoading"\n            :allowInlineEdit="false"\n            detailRoute="mapp.event.config.detail"\n            >\n\n            <template #column-eventName="{ item, column }">\n                <strong>\n                    <router-link :to="{ name: column.routerLink, params: { id: item.id } }">\n                        {{ $tc(\'global.businessEvents.\' + snakeCaseEventName(item.eventName)) }}\n                    </router-link>\n                </strong><br>\n                {{ item.eventName }}\n            </template>\n\n            <template #column-salesChannels="{ item, isInlineEdit }">\n                <sw-event-action-list-expand-labels\n                    :items="item.salesChannels"\n                    :disabled="isInlineEdit">\n                </sw-event-action-list-expand-labels>\n            </template>\n\n            <template #column-rules="{ item, isInlineEdit }">\n                <sw-event-action-list-expand-labels\n                    :items="item.rules"\n                    :disabled="isInlineEdit">\n                </sw-event-action-list-expand-labels>\n            </template>\n\n            <template #column-active="{ item, isInlineEdit }">\n                <sw-data-grid-column-boolean\n                    v-model="item.active"\n                    :isInlineEdit="isInlineEdit">\n                </sw-data-grid-column-boolean>\n            </template>\n        </sw-entity-listing>\n    </template>\n</sw-page>\n'}});